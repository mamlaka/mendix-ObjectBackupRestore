// This file was generated by Mendix Business Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package objectbackuprestore.proxies;

import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixIdentifier;
import com.mendix.systemwideinterfaces.core.IMendixObject;

/**
 * 
 */
public class TempRestoredObject
{
	private final IMendixObject tempRestoredObjectMendixObject;

	private final IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final String entityName = "ObjectBackupRestore.TempRestoredObject";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		DisplayName("DisplayName"),
		CompleteObjectName("CompleteObjectName"),
		ObjectID("ObjectID"),
		TempRestoredObject_Backup("ObjectBackupRestore.TempRestoredObject_Backup");

		private String metaName;

		MemberNames(String s)
		{
			metaName = s;
		}

		@Override
		public String toString()
		{
			return metaName;
		}
	}

	public TempRestoredObject(IContext context)
	{
		this(context, Core.instantiate(context, "ObjectBackupRestore.TempRestoredObject"));
	}

	protected TempRestoredObject(IContext context, IMendixObject tempRestoredObjectMendixObject)
	{
		if (tempRestoredObjectMendixObject == null)
			throw new IllegalArgumentException("The given object cannot be null.");
		if (!Core.isSubClassOf("ObjectBackupRestore.TempRestoredObject", tempRestoredObjectMendixObject.getType()))
			throw new IllegalArgumentException("The given object is not a ObjectBackupRestore.TempRestoredObject");

		this.tempRestoredObjectMendixObject = tempRestoredObjectMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'new TempRestoredObject(Context)' instead. Note that the constructor will not insert the new object in the database.
	 */
	@Deprecated
	public static objectbackuprestore.proxies.TempRestoredObject create(IContext context) throws CoreException
	{
		IMendixObject mendixObject = Core.create(context, "ObjectBackupRestore.TempRestoredObject");
		return new objectbackuprestore.proxies.TempRestoredObject(context, mendixObject);
	}

	/**
	 * @deprecated Use 'TempRestoredObject.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static objectbackuprestore.proxies.TempRestoredObject initialize(IContext context, IMendixIdentifier mendixIdentifier) throws CoreException
	{
		return objectbackuprestore.proxies.TempRestoredObject.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.getSudoContext() can be used to obtain sudo access).
	 */
	public static objectbackuprestore.proxies.TempRestoredObject initialize(IContext context, IMendixObject mendixObject)
	{
		return new objectbackuprestore.proxies.TempRestoredObject(context, mendixObject);
	}

	public static objectbackuprestore.proxies.TempRestoredObject load(IContext context, IMendixIdentifier mendixIdentifier) throws CoreException
	{
		IMendixObject mendixObject = Core.retrieveId(context, mendixIdentifier);
		return objectbackuprestore.proxies.TempRestoredObject.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws CoreException
	{
		Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(IContext context) throws CoreException
	{
		Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(IContext context)
	{
		Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of DisplayName
	 */
	public final String getDisplayName()
	{
		return getDisplayName(getContext());
	}

	/**
	 * @param context
	 * @return value of DisplayName
	 */
	public final String getDisplayName(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.DisplayName.toString());
	}

	/**
	 * Set value of DisplayName
	 * @param displayname
	 */
	public final void setDisplayName(String displayname)
	{
		setDisplayName(getContext(), displayname);
	}

	/**
	 * Set value of DisplayName
	 * @param context
	 * @param displayname
	 */
	public final void setDisplayName(IContext context, String displayname)
	{
		getMendixObject().setValue(context, MemberNames.DisplayName.toString(), displayname);
	}

	/**
	 * @return value of CompleteObjectName
	 */
	public final String getCompleteObjectName()
	{
		return getCompleteObjectName(getContext());
	}

	/**
	 * @param context
	 * @return value of CompleteObjectName
	 */
	public final String getCompleteObjectName(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.CompleteObjectName.toString());
	}

	/**
	 * Set value of CompleteObjectName
	 * @param completeobjectname
	 */
	public final void setCompleteObjectName(String completeobjectname)
	{
		setCompleteObjectName(getContext(), completeobjectname);
	}

	/**
	 * Set value of CompleteObjectName
	 * @param context
	 * @param completeobjectname
	 */
	public final void setCompleteObjectName(IContext context, String completeobjectname)
	{
		getMendixObject().setValue(context, MemberNames.CompleteObjectName.toString(), completeobjectname);
	}

	/**
	 * @return value of ObjectID
	 */
	public final String getObjectID()
	{
		return getObjectID(getContext());
	}

	/**
	 * @param context
	 * @return value of ObjectID
	 */
	public final String getObjectID(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.ObjectID.toString());
	}

	/**
	 * Set value of ObjectID
	 * @param objectid
	 */
	public final void setObjectID(String objectid)
	{
		setObjectID(getContext(), objectid);
	}

	/**
	 * Set value of ObjectID
	 * @param context
	 * @param objectid
	 */
	public final void setObjectID(IContext context, String objectid)
	{
		getMendixObject().setValue(context, MemberNames.ObjectID.toString(), objectid);
	}

	/**
	 * @return value of TempRestoredObject_Backup
	 */
	public final objectbackuprestore.proxies.Backup getTempRestoredObject_Backup() throws CoreException
	{
		return getTempRestoredObject_Backup(getContext());
	}

	/**
	 * @param context
	 * @return value of TempRestoredObject_Backup
	 */
	public final objectbackuprestore.proxies.Backup getTempRestoredObject_Backup(IContext context) throws CoreException
	{
		objectbackuprestore.proxies.Backup result = null;
		IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.TempRestoredObject_Backup.toString());
		if (identifier != null)
			result = objectbackuprestore.proxies.Backup.load(context, identifier);
		return result;
	}

	/**
	 * Set value of TempRestoredObject_Backup
	 * @param temprestoredobject_backup
	 */
	public final void setTempRestoredObject_Backup(objectbackuprestore.proxies.Backup temprestoredobject_backup)
	{
		setTempRestoredObject_Backup(getContext(), temprestoredobject_backup);
	}

	/**
	 * Set value of TempRestoredObject_Backup
	 * @param context
	 * @param temprestoredobject_backup
	 */
	public final void setTempRestoredObject_Backup(IContext context, objectbackuprestore.proxies.Backup temprestoredobject_backup)
	{
		if (temprestoredobject_backup == null)
			getMendixObject().setValue(context, MemberNames.TempRestoredObject_Backup.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.TempRestoredObject_Backup.toString(), temprestoredobject_backup.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final IMendixObject getMendixObject()
	{
		return tempRestoredObjectMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final objectbackuprestore.proxies.TempRestoredObject that = (objectbackuprestore.proxies.TempRestoredObject) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static String getType()
	{
		return "ObjectBackupRestore.TempRestoredObject";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
