// This file was generated by Mendix Business Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package objectbackuprestore.proxies;

import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixIdentifier;
import com.mendix.systemwideinterfaces.core.IMendixObject;

/**
 * 
 */
public class BackupConfigurationEntityNodeData extends objectbackuprestore.proxies.BackupConfigurationTreeNodeData
{
	/**
	 * Internal name of this entity
	 */
	public static final String entityName = "ObjectBackupRestore.BackupConfigurationEntityNodeData";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Caption("Caption"),
		NodeClass("NodeClass"),
		Key("Key"),
		BackupConfigurationEntityNodeData_MxObjectType("ObjectBackupRestore.BackupConfigurationEntityNodeData_MxObjectType"),
		BackupConfigurationObjectNodeData_BackupConfigurationTreeData("ObjectBackupRestore.BackupConfigurationObjectNodeData_BackupConfigurationTreeData"),
		TreeViewNodeData_TreeViewWidgetData("ObjectBackupRestore.TreeViewNodeData_TreeViewWidgetData"),
		ParentNode("ObjectBackupRestore.ParentNode");

		private String metaName;

		MemberNames(String s)
		{
			metaName = s;
		}

		@Override
		public String toString()
		{
			return metaName;
		}
	}

	public BackupConfigurationEntityNodeData(IContext context)
	{
		this(context, Core.instantiate(context, "ObjectBackupRestore.BackupConfigurationEntityNodeData"));
	}

	protected BackupConfigurationEntityNodeData(IContext context, IMendixObject backupConfigurationEntityNodeDataMendixObject)
	{
		super(context, backupConfigurationEntityNodeDataMendixObject);
		if (!Core.isSubClassOf("ObjectBackupRestore.BackupConfigurationEntityNodeData", backupConfigurationEntityNodeDataMendixObject.getType()))
			throw new IllegalArgumentException("The given object is not a ObjectBackupRestore.BackupConfigurationEntityNodeData");
	}

	/**
	 * @deprecated Use 'new BackupConfigurationEntityNodeData(Context)' instead. Note that the constructor will not insert the new object in the database.
	 */
	@Deprecated
	public static objectbackuprestore.proxies.BackupConfigurationEntityNodeData create(IContext context) throws CoreException
	{
		IMendixObject mendixObject = Core.create(context, "ObjectBackupRestore.BackupConfigurationEntityNodeData");
		return new objectbackuprestore.proxies.BackupConfigurationEntityNodeData(context, mendixObject);
	}

	/**
	 * @deprecated Use 'BackupConfigurationEntityNodeData.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static objectbackuprestore.proxies.BackupConfigurationEntityNodeData initialize(IContext context, IMendixIdentifier mendixIdentifier) throws CoreException
	{
		return objectbackuprestore.proxies.BackupConfigurationEntityNodeData.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.getSudoContext() can be used to obtain sudo access).
	 */
	public static objectbackuprestore.proxies.BackupConfigurationEntityNodeData initialize(IContext context, IMendixObject mendixObject)
	{
		return new objectbackuprestore.proxies.BackupConfigurationEntityNodeData(context, mendixObject);
	}

	public static objectbackuprestore.proxies.BackupConfigurationEntityNodeData load(IContext context, IMendixIdentifier mendixIdentifier) throws CoreException
	{
		IMendixObject mendixObject = Core.retrieveId(context, mendixIdentifier);
		return objectbackuprestore.proxies.BackupConfigurationEntityNodeData.initialize(context, mendixObject);
	}

	/**
	 * @return value of BackupConfigurationEntityNodeData_MxObjectType
	 */
	public final mxmodelreflection.proxies.MxObjectType getBackupConfigurationEntityNodeData_MxObjectType() throws CoreException
	{
		return getBackupConfigurationEntityNodeData_MxObjectType(getContext());
	}

	/**
	 * @param context
	 * @return value of BackupConfigurationEntityNodeData_MxObjectType
	 */
	public final mxmodelreflection.proxies.MxObjectType getBackupConfigurationEntityNodeData_MxObjectType(IContext context) throws CoreException
	{
		mxmodelreflection.proxies.MxObjectType result = null;
		IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.BackupConfigurationEntityNodeData_MxObjectType.toString());
		if (identifier != null)
			result = mxmodelreflection.proxies.MxObjectType.load(context, identifier);
		return result;
	}

	/**
	 * Set value of BackupConfigurationEntityNodeData_MxObjectType
	 * @param backupconfigurationentitynodedata_mxobjecttype
	 */
	public final void setBackupConfigurationEntityNodeData_MxObjectType(mxmodelreflection.proxies.MxObjectType backupconfigurationentitynodedata_mxobjecttype)
	{
		setBackupConfigurationEntityNodeData_MxObjectType(getContext(), backupconfigurationentitynodedata_mxobjecttype);
	}

	/**
	 * Set value of BackupConfigurationEntityNodeData_MxObjectType
	 * @param context
	 * @param backupconfigurationentitynodedata_mxobjecttype
	 */
	public final void setBackupConfigurationEntityNodeData_MxObjectType(IContext context, mxmodelreflection.proxies.MxObjectType backupconfigurationentitynodedata_mxobjecttype)
	{
		if (backupconfigurationentitynodedata_mxobjecttype == null)
			getMendixObject().setValue(context, MemberNames.BackupConfigurationEntityNodeData_MxObjectType.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.BackupConfigurationEntityNodeData_MxObjectType.toString(), backupconfigurationentitynodedata_mxobjecttype.getMendixObject().getId());
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final objectbackuprestore.proxies.BackupConfigurationEntityNodeData that = (objectbackuprestore.proxies.BackupConfigurationEntityNodeData) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static String getType()
	{
		return "ObjectBackupRestore.BackupConfigurationEntityNodeData";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
