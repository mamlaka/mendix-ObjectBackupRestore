// This file was generated by Mendix Business Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package objectbackuprestore.proxies;

import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixIdentifier;
import com.mendix.systemwideinterfaces.core.IMendixObject;

/**
 * 
 */
public class TreeViewWidgetData
{
	private final IMendixObject treeViewWidgetDataMendixObject;

	private final IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final String entityName = "ObjectBackupRestore.TreeViewWidgetData";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Action("Action"),
		NewSelectionKey("NewSelectionKey");

		private String metaName;

		MemberNames(String s)
		{
			metaName = s;
		}

		@Override
		public String toString()
		{
			return metaName;
		}
	}

	public TreeViewWidgetData(IContext context)
	{
		this(context, Core.instantiate(context, "ObjectBackupRestore.TreeViewWidgetData"));
	}

	protected TreeViewWidgetData(IContext context, IMendixObject treeViewWidgetDataMendixObject)
	{
		if (treeViewWidgetDataMendixObject == null)
			throw new IllegalArgumentException("The given object cannot be null.");
		if (!Core.isSubClassOf("ObjectBackupRestore.TreeViewWidgetData", treeViewWidgetDataMendixObject.getType()))
			throw new IllegalArgumentException("The given object is not a ObjectBackupRestore.TreeViewWidgetData");

		this.treeViewWidgetDataMendixObject = treeViewWidgetDataMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'new TreeViewWidgetData(Context)' instead. Note that the constructor will not insert the new object in the database.
	 */
	@Deprecated
	public static objectbackuprestore.proxies.TreeViewWidgetData create(IContext context) throws CoreException
	{
		IMendixObject mendixObject = Core.create(context, "ObjectBackupRestore.TreeViewWidgetData");
		return new objectbackuprestore.proxies.TreeViewWidgetData(context, mendixObject);
	}

	/**
	 * @deprecated Use 'TreeViewWidgetData.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static objectbackuprestore.proxies.TreeViewWidgetData initialize(IContext context, IMendixIdentifier mendixIdentifier) throws CoreException
	{
		return objectbackuprestore.proxies.TreeViewWidgetData.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.getSudoContext() can be used to obtain sudo access).
	 */
	public static objectbackuprestore.proxies.TreeViewWidgetData initialize(IContext context, IMendixObject mendixObject)
	{
		if (Core.isSubClassOf("ObjectBackupRestore.BackupConfigurationTreeData", mendixObject.getType()))
			return objectbackuprestore.proxies.BackupConfigurationTreeData.initialize(context, mendixObject);

		return new objectbackuprestore.proxies.TreeViewWidgetData(context, mendixObject);
	}

	public static objectbackuprestore.proxies.TreeViewWidgetData load(IContext context, IMendixIdentifier mendixIdentifier) throws CoreException
	{
		IMendixObject mendixObject = Core.retrieveId(context, mendixIdentifier);
		return objectbackuprestore.proxies.TreeViewWidgetData.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws CoreException
	{
		Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(IContext context) throws CoreException
	{
		Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(IContext context)
	{
		Core.delete(context, getMendixObject());
	}
	/**
	 * Set value of Action
	 * @param action
	 */
	public final objectbackuprestore.proxies.TreeViewAction getAction()
	{
		return getAction(getContext());
	}

	/**
	 * @param context
	 * @return value of Action
	 */
	public final objectbackuprestore.proxies.TreeViewAction getAction(IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.Action.toString());
		if (obj == null)
			return null;

		return objectbackuprestore.proxies.TreeViewAction.valueOf((String) obj);
	}

	/**
	 * Set value of Action
	 * @param action
	 */
	public final void setAction(objectbackuprestore.proxies.TreeViewAction action)
	{
		setAction(getContext(), action);
	}

	/**
	 * Set value of Action
	 * @param context
	 * @param action
	 */
	public final void setAction(IContext context, objectbackuprestore.proxies.TreeViewAction action)
	{
		if (action != null)
			getMendixObject().setValue(context, MemberNames.Action.toString(), action.toString());
		else
			getMendixObject().setValue(context, MemberNames.Action.toString(), null);
	}

	/**
	 * @return value of NewSelectionKey
	 */
	public final String getNewSelectionKey()
	{
		return getNewSelectionKey(getContext());
	}

	/**
	 * @param context
	 * @return value of NewSelectionKey
	 */
	public final String getNewSelectionKey(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.NewSelectionKey.toString());
	}

	/**
	 * Set value of NewSelectionKey
	 * @param newselectionkey
	 */
	public final void setNewSelectionKey(String newselectionkey)
	{
		setNewSelectionKey(getContext(), newselectionkey);
	}

	/**
	 * Set value of NewSelectionKey
	 * @param context
	 * @param newselectionkey
	 */
	public final void setNewSelectionKey(IContext context, String newselectionkey)
	{
		getMendixObject().setValue(context, MemberNames.NewSelectionKey.toString(), newselectionkey);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final IMendixObject getMendixObject()
	{
		return treeViewWidgetDataMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final objectbackuprestore.proxies.TreeViewWidgetData that = (objectbackuprestore.proxies.TreeViewWidgetData) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static String getType()
	{
		return "ObjectBackupRestore.TreeViewWidgetData";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
