// This file was generated by Mendix Business Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package objectbackuprestore.proxies;

import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixIdentifier;
import com.mendix.systemwideinterfaces.core.IMendixObject;

/**
 * 
 */
public class TempRestoredObjectReference
{
	private final IMendixObject tempRestoredObjectReferenceMendixObject;

	private final IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final String entityName = "ObjectBackupRestore.TempRestoredObjectReference";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		ReferenceName("ReferenceName"),
		ReferencedEntityCompleteName("ReferencedEntityCompleteName"),
		IsReferenceSet("IsReferenceSet"),
		ObjectID("ObjectID"),
		ObjectKeyName("ObjectKeyName"),
		ObjectKeyValue("ObjectKeyValue"),
		TempRestoredObjectReference_TempRestoredObject("ObjectBackupRestore.TempRestoredObjectReference_TempRestoredObject");

		private String metaName;

		MemberNames(String s)
		{
			metaName = s;
		}

		@Override
		public String toString()
		{
			return metaName;
		}
	}

	public TempRestoredObjectReference(IContext context)
	{
		this(context, Core.instantiate(context, "ObjectBackupRestore.TempRestoredObjectReference"));
	}

	protected TempRestoredObjectReference(IContext context, IMendixObject tempRestoredObjectReferenceMendixObject)
	{
		if (tempRestoredObjectReferenceMendixObject == null)
			throw new IllegalArgumentException("The given object cannot be null.");
		if (!Core.isSubClassOf("ObjectBackupRestore.TempRestoredObjectReference", tempRestoredObjectReferenceMendixObject.getType()))
			throw new IllegalArgumentException("The given object is not a ObjectBackupRestore.TempRestoredObjectReference");

		this.tempRestoredObjectReferenceMendixObject = tempRestoredObjectReferenceMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'new TempRestoredObjectReference(Context)' instead. Note that the constructor will not insert the new object in the database.
	 */
	@Deprecated
	public static objectbackuprestore.proxies.TempRestoredObjectReference create(IContext context) throws CoreException
	{
		IMendixObject mendixObject = Core.create(context, "ObjectBackupRestore.TempRestoredObjectReference");
		return new objectbackuprestore.proxies.TempRestoredObjectReference(context, mendixObject);
	}

	/**
	 * @deprecated Use 'TempRestoredObjectReference.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static objectbackuprestore.proxies.TempRestoredObjectReference initialize(IContext context, IMendixIdentifier mendixIdentifier) throws CoreException
	{
		return objectbackuprestore.proxies.TempRestoredObjectReference.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.getSudoContext() can be used to obtain sudo access).
	 */
	public static objectbackuprestore.proxies.TempRestoredObjectReference initialize(IContext context, IMendixObject mendixObject)
	{
		return new objectbackuprestore.proxies.TempRestoredObjectReference(context, mendixObject);
	}

	public static objectbackuprestore.proxies.TempRestoredObjectReference load(IContext context, IMendixIdentifier mendixIdentifier) throws CoreException
	{
		IMendixObject mendixObject = Core.retrieveId(context, mendixIdentifier);
		return objectbackuprestore.proxies.TempRestoredObjectReference.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws CoreException
	{
		Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(IContext context) throws CoreException
	{
		Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(IContext context)
	{
		Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of ReferenceName
	 */
	public final String getReferenceName()
	{
		return getReferenceName(getContext());
	}

	/**
	 * @param context
	 * @return value of ReferenceName
	 */
	public final String getReferenceName(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.ReferenceName.toString());
	}

	/**
	 * Set value of ReferenceName
	 * @param referencename
	 */
	public final void setReferenceName(String referencename)
	{
		setReferenceName(getContext(), referencename);
	}

	/**
	 * Set value of ReferenceName
	 * @param context
	 * @param referencename
	 */
	public final void setReferenceName(IContext context, String referencename)
	{
		getMendixObject().setValue(context, MemberNames.ReferenceName.toString(), referencename);
	}

	/**
	 * @return value of ReferencedEntityCompleteName
	 */
	public final String getReferencedEntityCompleteName()
	{
		return getReferencedEntityCompleteName(getContext());
	}

	/**
	 * @param context
	 * @return value of ReferencedEntityCompleteName
	 */
	public final String getReferencedEntityCompleteName(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.ReferencedEntityCompleteName.toString());
	}

	/**
	 * Set value of ReferencedEntityCompleteName
	 * @param referencedentitycompletename
	 */
	public final void setReferencedEntityCompleteName(String referencedentitycompletename)
	{
		setReferencedEntityCompleteName(getContext(), referencedentitycompletename);
	}

	/**
	 * Set value of ReferencedEntityCompleteName
	 * @param context
	 * @param referencedentitycompletename
	 */
	public final void setReferencedEntityCompleteName(IContext context, String referencedentitycompletename)
	{
		getMendixObject().setValue(context, MemberNames.ReferencedEntityCompleteName.toString(), referencedentitycompletename);
	}

	/**
	 * @return value of IsReferenceSet
	 */
	public final Boolean getIsReferenceSet()
	{
		return getIsReferenceSet(getContext());
	}

	/**
	 * @param context
	 * @return value of IsReferenceSet
	 */
	public final Boolean getIsReferenceSet(IContext context)
	{
		return (Boolean) getMendixObject().getValue(context, MemberNames.IsReferenceSet.toString());
	}

	/**
	 * Set value of IsReferenceSet
	 * @param isreferenceset
	 */
	public final void setIsReferenceSet(Boolean isreferenceset)
	{
		setIsReferenceSet(getContext(), isreferenceset);
	}

	/**
	 * Set value of IsReferenceSet
	 * @param context
	 * @param isreferenceset
	 */
	public final void setIsReferenceSet(IContext context, Boolean isreferenceset)
	{
		getMendixObject().setValue(context, MemberNames.IsReferenceSet.toString(), isreferenceset);
	}

	/**
	 * @return value of ObjectID
	 */
	public final String getObjectID()
	{
		return getObjectID(getContext());
	}

	/**
	 * @param context
	 * @return value of ObjectID
	 */
	public final String getObjectID(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.ObjectID.toString());
	}

	/**
	 * Set value of ObjectID
	 * @param objectid
	 */
	public final void setObjectID(String objectid)
	{
		setObjectID(getContext(), objectid);
	}

	/**
	 * Set value of ObjectID
	 * @param context
	 * @param objectid
	 */
	public final void setObjectID(IContext context, String objectid)
	{
		getMendixObject().setValue(context, MemberNames.ObjectID.toString(), objectid);
	}

	/**
	 * @return value of ObjectKeyName
	 */
	public final String getObjectKeyName()
	{
		return getObjectKeyName(getContext());
	}

	/**
	 * @param context
	 * @return value of ObjectKeyName
	 */
	public final String getObjectKeyName(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.ObjectKeyName.toString());
	}

	/**
	 * Set value of ObjectKeyName
	 * @param objectkeyname
	 */
	public final void setObjectKeyName(String objectkeyname)
	{
		setObjectKeyName(getContext(), objectkeyname);
	}

	/**
	 * Set value of ObjectKeyName
	 * @param context
	 * @param objectkeyname
	 */
	public final void setObjectKeyName(IContext context, String objectkeyname)
	{
		getMendixObject().setValue(context, MemberNames.ObjectKeyName.toString(), objectkeyname);
	}

	/**
	 * @return value of ObjectKeyValue
	 */
	public final String getObjectKeyValue()
	{
		return getObjectKeyValue(getContext());
	}

	/**
	 * @param context
	 * @return value of ObjectKeyValue
	 */
	public final String getObjectKeyValue(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.ObjectKeyValue.toString());
	}

	/**
	 * Set value of ObjectKeyValue
	 * @param objectkeyvalue
	 */
	public final void setObjectKeyValue(String objectkeyvalue)
	{
		setObjectKeyValue(getContext(), objectkeyvalue);
	}

	/**
	 * Set value of ObjectKeyValue
	 * @param context
	 * @param objectkeyvalue
	 */
	public final void setObjectKeyValue(IContext context, String objectkeyvalue)
	{
		getMendixObject().setValue(context, MemberNames.ObjectKeyValue.toString(), objectkeyvalue);
	}

	/**
	 * @return value of TempRestoredObjectReference_TempRestoredObject
	 */
	public final objectbackuprestore.proxies.TempRestoredObject getTempRestoredObjectReference_TempRestoredObject() throws CoreException
	{
		return getTempRestoredObjectReference_TempRestoredObject(getContext());
	}

	/**
	 * @param context
	 * @return value of TempRestoredObjectReference_TempRestoredObject
	 */
	public final objectbackuprestore.proxies.TempRestoredObject getTempRestoredObjectReference_TempRestoredObject(IContext context) throws CoreException
	{
		objectbackuprestore.proxies.TempRestoredObject result = null;
		IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.TempRestoredObjectReference_TempRestoredObject.toString());
		if (identifier != null)
			result = objectbackuprestore.proxies.TempRestoredObject.load(context, identifier);
		return result;
	}

	/**
	 * Set value of TempRestoredObjectReference_TempRestoredObject
	 * @param temprestoredobjectreference_temprestoredobject
	 */
	public final void setTempRestoredObjectReference_TempRestoredObject(objectbackuprestore.proxies.TempRestoredObject temprestoredobjectreference_temprestoredobject)
	{
		setTempRestoredObjectReference_TempRestoredObject(getContext(), temprestoredobjectreference_temprestoredobject);
	}

	/**
	 * Set value of TempRestoredObjectReference_TempRestoredObject
	 * @param context
	 * @param temprestoredobjectreference_temprestoredobject
	 */
	public final void setTempRestoredObjectReference_TempRestoredObject(IContext context, objectbackuprestore.proxies.TempRestoredObject temprestoredobjectreference_temprestoredobject)
	{
		if (temprestoredobjectreference_temprestoredobject == null)
			getMendixObject().setValue(context, MemberNames.TempRestoredObjectReference_TempRestoredObject.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.TempRestoredObjectReference_TempRestoredObject.toString(), temprestoredobjectreference_temprestoredobject.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final IMendixObject getMendixObject()
	{
		return tempRestoredObjectReferenceMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final objectbackuprestore.proxies.TempRestoredObjectReference that = (objectbackuprestore.proxies.TempRestoredObjectReference) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static String getType()
	{
		return "ObjectBackupRestore.TempRestoredObjectReference";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
