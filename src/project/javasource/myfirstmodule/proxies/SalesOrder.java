// This file was generated by Mendix Business Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package myfirstmodule.proxies;

import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixIdentifier;
import com.mendix.systemwideinterfaces.core.IMendixObject;

/**
 * 
 */
public class SalesOrder
{
	private final IMendixObject salesOrderMendixObject;

	private final IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final String entityName = "MyFirstModule.SalesOrder";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		orderNumber("orderNumber"),
		orderDate("orderDate"),
		totalSalesValue("totalSalesValue"),
		itemCount("itemCount"),
		region("region"),
		SalesOrder_Employee("MyFirstModule.SalesOrder_Employee");

		private String metaName;

		MemberNames(String s)
		{
			metaName = s;
		}

		@Override
		public String toString()
		{
			return metaName;
		}
	}

	public SalesOrder(IContext context)
	{
		this(context, Core.instantiate(context, "MyFirstModule.SalesOrder"));
	}

	protected SalesOrder(IContext context, IMendixObject salesOrderMendixObject)
	{
		if (salesOrderMendixObject == null)
			throw new IllegalArgumentException("The given object cannot be null.");
		if (!Core.isSubClassOf("MyFirstModule.SalesOrder", salesOrderMendixObject.getType()))
			throw new IllegalArgumentException("The given object is not a MyFirstModule.SalesOrder");

		this.salesOrderMendixObject = salesOrderMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'new SalesOrder(Context)' instead. Note that the constructor will not insert the new object in the database.
	 */
	@Deprecated
	public static myfirstmodule.proxies.SalesOrder create(IContext context) throws CoreException
	{
		IMendixObject mendixObject = Core.create(context, "MyFirstModule.SalesOrder");
		return new myfirstmodule.proxies.SalesOrder(context, mendixObject);
	}

	/**
	 * @deprecated Use 'SalesOrder.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static myfirstmodule.proxies.SalesOrder initialize(IContext context, IMendixIdentifier mendixIdentifier) throws CoreException
	{
		return myfirstmodule.proxies.SalesOrder.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.getSudoContext() can be used to obtain sudo access).
	 */
	public static myfirstmodule.proxies.SalesOrder initialize(IContext context, IMendixObject mendixObject)
	{
		return new myfirstmodule.proxies.SalesOrder(context, mendixObject);
	}

	public static myfirstmodule.proxies.SalesOrder load(IContext context, IMendixIdentifier mendixIdentifier) throws CoreException
	{
		IMendixObject mendixObject = Core.retrieveId(context, mendixIdentifier);
		return myfirstmodule.proxies.SalesOrder.initialize(context, mendixObject);
	}

	public static java.util.List<myfirstmodule.proxies.SalesOrder> load(IContext context, String xpathConstraint) throws CoreException
	{
		java.util.List<myfirstmodule.proxies.SalesOrder> result = new java.util.ArrayList<myfirstmodule.proxies.SalesOrder>();
		for (IMendixObject obj : Core.retrieveXPathQuery(context, "//MyFirstModule.SalesOrder" + xpathConstraint))
			result.add(myfirstmodule.proxies.SalesOrder.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws CoreException
	{
		Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(IContext context) throws CoreException
	{
		Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(IContext context)
	{
		Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of orderNumber
	 */
	public final Long getorderNumber()
	{
		return getorderNumber(getContext());
	}

	/**
	 * @param context
	 * @return value of orderNumber
	 */
	public final Long getorderNumber(IContext context)
	{
		return (Long) getMendixObject().getValue(context, MemberNames.orderNumber.toString());
	}

	/**
	 * Set value of orderNumber
	 * @param ordernumber
	 */
	public final void setorderNumber(Long ordernumber)
	{
		setorderNumber(getContext(), ordernumber);
	}

	/**
	 * Set value of orderNumber
	 * @param context
	 * @param ordernumber
	 */
	public final void setorderNumber(IContext context, Long ordernumber)
	{
		getMendixObject().setValue(context, MemberNames.orderNumber.toString(), ordernumber);
	}

	/**
	 * @return value of orderDate
	 */
	public final java.util.Date getorderDate()
	{
		return getorderDate(getContext());
	}

	/**
	 * @param context
	 * @return value of orderDate
	 */
	public final java.util.Date getorderDate(IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.orderDate.toString());
	}

	/**
	 * Set value of orderDate
	 * @param orderdate
	 */
	public final void setorderDate(java.util.Date orderdate)
	{
		setorderDate(getContext(), orderdate);
	}

	/**
	 * Set value of orderDate
	 * @param context
	 * @param orderdate
	 */
	public final void setorderDate(IContext context, java.util.Date orderdate)
	{
		getMendixObject().setValue(context, MemberNames.orderDate.toString(), orderdate);
	}

	/**
	 * @return value of totalSalesValue
	 */
	public final Double gettotalSalesValue()
	{
		return gettotalSalesValue(getContext());
	}

	/**
	 * @param context
	 * @return value of totalSalesValue
	 */
	public final Double gettotalSalesValue(IContext context)
	{
		return (Double) getMendixObject().getValue(context, MemberNames.totalSalesValue.toString());
	}

	/**
	 * Set value of totalSalesValue
	 * @param totalsalesvalue
	 */
	public final void settotalSalesValue(Double totalsalesvalue)
	{
		settotalSalesValue(getContext(), totalsalesvalue);
	}

	/**
	 * Set value of totalSalesValue
	 * @param context
	 * @param totalsalesvalue
	 */
	public final void settotalSalesValue(IContext context, Double totalsalesvalue)
	{
		getMendixObject().setValue(context, MemberNames.totalSalesValue.toString(), totalsalesvalue);
	}

	/**
	 * @return value of itemCount
	 */
	public final Integer getitemCount()
	{
		return getitemCount(getContext());
	}

	/**
	 * @param context
	 * @return value of itemCount
	 */
	public final Integer getitemCount(IContext context)
	{
		return (Integer) getMendixObject().getValue(context, MemberNames.itemCount.toString());
	}

	/**
	 * Set value of itemCount
	 * @param itemcount
	 */
	public final void setitemCount(Integer itemcount)
	{
		setitemCount(getContext(), itemcount);
	}

	/**
	 * Set value of itemCount
	 * @param context
	 * @param itemcount
	 */
	public final void setitemCount(IContext context, Integer itemcount)
	{
		getMendixObject().setValue(context, MemberNames.itemCount.toString(), itemcount);
	}

	/**
	 * Set value of region
	 * @param region
	 */
	public final myfirstmodule.proxies.Region getregion()
	{
		return getregion(getContext());
	}

	/**
	 * @param context
	 * @return value of region
	 */
	public final myfirstmodule.proxies.Region getregion(IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.region.toString());
		if (obj == null)
			return null;

		return myfirstmodule.proxies.Region.valueOf((String) obj);
	}

	/**
	 * Set value of region
	 * @param region
	 */
	public final void setregion(myfirstmodule.proxies.Region region)
	{
		setregion(getContext(), region);
	}

	/**
	 * Set value of region
	 * @param context
	 * @param region
	 */
	public final void setregion(IContext context, myfirstmodule.proxies.Region region)
	{
		if (region != null)
			getMendixObject().setValue(context, MemberNames.region.toString(), region.toString());
		else
			getMendixObject().setValue(context, MemberNames.region.toString(), null);
	}

	/**
	 * @return value of SalesOrder_Employee
	 */
	public final myfirstmodule.proxies.Employee getSalesOrder_Employee() throws CoreException
	{
		return getSalesOrder_Employee(getContext());
	}

	/**
	 * @param context
	 * @return value of SalesOrder_Employee
	 */
	public final myfirstmodule.proxies.Employee getSalesOrder_Employee(IContext context) throws CoreException
	{
		myfirstmodule.proxies.Employee result = null;
		IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.SalesOrder_Employee.toString());
		if (identifier != null)
			result = myfirstmodule.proxies.Employee.load(context, identifier);
		return result;
	}

	/**
	 * Set value of SalesOrder_Employee
	 * @param salesorder_employee
	 */
	public final void setSalesOrder_Employee(myfirstmodule.proxies.Employee salesorder_employee)
	{
		setSalesOrder_Employee(getContext(), salesorder_employee);
	}

	/**
	 * Set value of SalesOrder_Employee
	 * @param context
	 * @param salesorder_employee
	 */
	public final void setSalesOrder_Employee(IContext context, myfirstmodule.proxies.Employee salesorder_employee)
	{
		if (salesorder_employee == null)
			getMendixObject().setValue(context, MemberNames.SalesOrder_Employee.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.SalesOrder_Employee.toString(), salesorder_employee.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final IMendixObject getMendixObject()
	{
		return salesOrderMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final myfirstmodule.proxies.SalesOrder that = (myfirstmodule.proxies.SalesOrder) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static String getType()
	{
		return "MyFirstModule.SalesOrder";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
