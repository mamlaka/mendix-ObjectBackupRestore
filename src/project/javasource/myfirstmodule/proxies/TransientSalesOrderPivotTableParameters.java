// This file was generated by Mendix Business Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package myfirstmodule.proxies;

import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixIdentifier;
import com.mendix.systemwideinterfaces.core.IMendixObject;

/**
 * 
 */
public class TransientSalesOrderPivotTableParameters
{
	private final IMendixObject transientSalesOrderPivotTableParametersMendixObject;

	private final IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final String entityName = "MyFirstModule.TransientSalesOrderPivotTableParameters";

	public TransientSalesOrderPivotTableParameters(IContext context)
	{
		this(context, Core.instantiate(context, "MyFirstModule.TransientSalesOrderPivotTableParameters"));
	}

	protected TransientSalesOrderPivotTableParameters(IContext context, IMendixObject transientSalesOrderPivotTableParametersMendixObject)
	{
		if (transientSalesOrderPivotTableParametersMendixObject == null)
			throw new IllegalArgumentException("The given object cannot be null.");
		if (!Core.isSubClassOf("MyFirstModule.TransientSalesOrderPivotTableParameters", transientSalesOrderPivotTableParametersMendixObject.getType()))
			throw new IllegalArgumentException("The given object is not a MyFirstModule.TransientSalesOrderPivotTableParameters");

		this.transientSalesOrderPivotTableParametersMendixObject = transientSalesOrderPivotTableParametersMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'new TransientSalesOrderPivotTableParameters(Context)' instead. Note that the constructor will not insert the new object in the database.
	 */
	@Deprecated
	public static myfirstmodule.proxies.TransientSalesOrderPivotTableParameters create(IContext context) throws CoreException
	{
		IMendixObject mendixObject = Core.create(context, "MyFirstModule.TransientSalesOrderPivotTableParameters");
		return new myfirstmodule.proxies.TransientSalesOrderPivotTableParameters(context, mendixObject);
	}

	/**
	 * @deprecated Use 'TransientSalesOrderPivotTableParameters.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static myfirstmodule.proxies.TransientSalesOrderPivotTableParameters initialize(IContext context, IMendixIdentifier mendixIdentifier) throws CoreException
	{
		return myfirstmodule.proxies.TransientSalesOrderPivotTableParameters.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.getSudoContext() can be used to obtain sudo access).
	 */
	public static myfirstmodule.proxies.TransientSalesOrderPivotTableParameters initialize(IContext context, IMendixObject mendixObject)
	{
		return new myfirstmodule.proxies.TransientSalesOrderPivotTableParameters(context, mendixObject);
	}

	public static myfirstmodule.proxies.TransientSalesOrderPivotTableParameters load(IContext context, IMendixIdentifier mendixIdentifier) throws CoreException
	{
		IMendixObject mendixObject = Core.retrieveId(context, mendixIdentifier);
		return myfirstmodule.proxies.TransientSalesOrderPivotTableParameters.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws CoreException
	{
		Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(IContext context) throws CoreException
	{
		Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(IContext context)
	{
		Core.delete(context, getMendixObject());
	}
	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final IMendixObject getMendixObject()
	{
		return transientSalesOrderPivotTableParametersMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final myfirstmodule.proxies.TransientSalesOrderPivotTableParameters that = (myfirstmodule.proxies.TransientSalesOrderPivotTableParameters) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static String getType()
	{
		return "MyFirstModule.TransientSalesOrderPivotTableParameters";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
